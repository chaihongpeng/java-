Machine / Deep Learning


Machine Learning ≈ Looking for Function
机械学习就是让机械具有找函式的能力

机械学习的分类:

	Regression:输出是数值的机械学习
	Classification:选出选择题选项的机械学习
	Structured:机械产生有结构的物件,如机械画一张图或写一篇文章

1.z找函式
Model:
Function:
	y = b + wx

2.定义Loss
L(b,w),用于计算预测值和真实值之间差距的函式,例:真实值与预测值的方差就可以代表一种Loss

Label:机械学习所需要的正确的数据

3.Optimization:
找最佳化:找出w和b让Loss值最小
w*,b* = arg min_(w,b) L
	找最小Loss的方法:
	Gradient Descent(梯度下降)
		随机选一个初始点
		计算微分,通过斜率计算方向,每次唯一个步长
	learning rate学习速率:自己定义的跨度的大小
	
	local minima 局部函数最小
	global minma 全局最低点
	
Linear Model


1.矩阵加法:
	相加规律
		同型矩阵
		对位相加
	规律:
		A + B = B + A
		(A + B) + C = A + (B + C)
		A + (-A) = 0, A - B = A + (-B)

2.矩阵乘法
	数与矩阵相乘,乘数与矩阵的每一个元素都相乘;(行列式是只乘在一行或者一列上)
	结合律:
		(λμ)A = λ(λA)
		(AB)C = A(BC)
	分配率:
		λ(A + B) = λA + λB
		(λ + μ)A = λA + μA
		A(B + C) = AB + AC
		(A + B)C = AC + BC
	矩阵相乘不满足交换律
	
	单位矩阵:
		E:相当于自然数中的1
	矩阵的幂:
		若A是n阶方阵,则:
			A^k * A^l = A^kl;
			(A^k)^l = A^kl;
转置矩阵:
	A^T
	A的行换成列
	(A^T)^T = A;
	(A + B)^T = A^T + B^T
	(λA)^T = λA^T
	(AB)^T = B^T * A^T
	如果A = A^T,那么A成为对称阵
			
矩阵相加与数乘合起来,统称矩阵的线性运算

阶梯型矩阵:
	若有零行,零行在非零行的下边;
	左起首非零元左边零的个数随行数增加而严格的增加;


宋氏阶梯折线法:
	横线可跨多个数;
	竖线只跨一个数;


行简化阶梯型:
	首先满足阶梯矩阵定义
	非零行的首非零元是1
	首非零行所在的列的其余元素是0

矩阵的秩等于阶梯矩阵非零行的个数


性质:
	矩阵的转置的秩和原矩阵的秩相等
	r(A) = r(A^T)

	任意矩阵乘以可逆矩阵,他的秩不变
	r(A) = r(PA) = r(AQ) = r(PAQ)  {P和Q都是可逆矩阵}
	矩阵的初等行变换和初等列变换不改变矩阵的秩
	










































