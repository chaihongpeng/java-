路由的成员：
route一条路由
{
	path:"",
	component:""
}
一条路由由一个路径和一个组件组成一个对象


routes一组路由
[route]
route数组组成一个routes


router路由管理者
VueRouter({
	router
})




路由钩子：
全局路由守卫
router.afterEach((to,from)=>{})
路由独享守卫
routes:[
	{
		path:"",
		component:"",
		beforeEnter:""
	}
]

路由守卫：
(
	to，//即将进入的路由目标
	from,//当前正要离开的路由目标
	next//钩子的确认方法
)
=>{
	next()//进入下一个钩子
	next(false)//中断当前导航
	next("/")//打断路由，跳转到其他路由
	next(error)//终止路由，跳转到router.onError()注册过的回调

}

嵌套路由，在route里嵌套children数组
router-view可以包含其他的router-view
嵌套渲染组件需要在route中配置children
嵌套path中以/开头会被当做跟路径


路由跳转：
标签路由:
	<router-link><router-link>
	to属性，跳转路径
	type属性，默认渲染标签
	replace无痕

代码路由:
	$router
	$router.push()路由跳转
	$router.replace()无痕跳转