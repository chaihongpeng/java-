进程和线程有什么区别？
	进程就是程序运行起来的状态
	线程是一个进程中的不同执行路径

	进程是操作系统用来分配资源的基本单位
	线程是操作系统进行调度的基本单位
	
	程序就是为了实现特定目标而编写的指令集合。
	
	理论上来说一个程序可以有多个进程，一个进程可以有多个线程。有些程序只能开启一个是因为指令在程序的内部进行了判断，与程序的概念无关

进程的最大特点？
	不同的进程拥有自己独立的内存空间
线程的特点？
	线程共享进程的资源
	
jvm中的线程？
	就是起一个操作系统级别的线程，他是一个重量级的线程，一个jvm的线程对应一个操作系统线程
什么是纤程？
	线程中的线程，纤程是由程序自己实现的，不需要与系统内核打交道，一个纤程不用对应一个系统线程。
	优点：就是跑在用户态，切换和调度不需要通过操作系统，可以启动十万多个纤程的启动。
	java目前主分支不支持，可以通过分支类库来实现
	
	
linux的进程描述符：PCB(Process Control Block)每一个进程都有一个PCB
	在linux当中，线程就是一个进程，只不过他会和其他进程共享资源，所以每一个进程也都有一个pcb

什么是系统函数？
	系统内核暴露出来的接口
什么是僵尸进程？
	父进程产生子进程后，会维护子进程的pcb，如果父进程在释放时没有清除子进程的pcb，就会形成僵尸进程
	僵尸进程几乎不影响系统运行，父进程在停止后会释放所有的资源，子进程基本不占用资源，只会占用一个pcb信息
	
什么是中断？




