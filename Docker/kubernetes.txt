集群环境的容器编排工具

自动化容器的部署和配置
随时扩展与收缩容器规模
容器分组，提供容器间的负载均衡
实时监控，及时发现故障，自动替换

Kubernetes Master

Node
	Pod(豆荚):
		//一个Pod可以包含多个容器，Pod是k8s的最小单元，一个Pod是一个独立进程，他拥有自己的资源，Pod内部每一个容器天然互联互通，每一个Pod本身都有独立的虚拟IP，虚拟Ip由k8s同一管理
		//Pod虽然有独立的IP,但是在天然环境无法直接进行网络通讯，如果要通讯，必须要通过另一个组件Service
		Pause容器:
			//他的职能提供一个共享的网络空间，提供一个共享的volume数据卷
			//网络层面共享命名空间，对于整个Pod可以直接看成一个整体，直接使用localhost就可以实现在同一个Pod中的Pause任意通讯
Service:将不同主机上的Pod进行联通，让Pod和Pod之间可以直接进行通讯

Label标签，属于一个说明性的标签，每一个Pod的别名
Repliation Controller复制控制器，存在于主节点，作用对Pod数目进行监控

每一个节点中必须安装三个应用程序
docker
kuberlet:用于执行k8s的命令,相当于执行docker的命令
kube-proxy:代理，跨主机跨容器的网络通讯就是使用此组件,service在逻辑上进行了分组，但是底层依然要使用kube-proxy完成跨主机通讯



Kubernetes的安装
	使用kubeadmin离线安装
	使用阿里云的k8s服务，超能力
	yum官方仓库安装，yum官方版本过于古老不推荐使用
	采用第三方二进制包的形式进行安装，不推荐使用