会话管理，session实际上是一个技术，用于管理唯一标识字符串的生成创建销毁
这个字符串就要存在cookie里
token也是字符串，不过不下发到cookie里。
而是手动向每次点击链接时，在所有的请求上都加上一个字符串。可以时header上，也可以在body里
浏览器同源策略，浏览器在传递token时，会判断是否在同一个源，同一个网站。这个是浏览器自动判断的
不同源就是跨域，csrf。同源下所有的访问都是合法的。

什么是同源

什么是同源策略
	首先同源策略是浏览器的安全策略，和服务器无关
	
怎样出现跨域请求
	可以直接访问，不需要处理的跨域
		iframe：可以将会话带过去
		image的src，js的src 会话带不过去，但是可以访问
	需要处理的跨域请求
		js中，ajax的异步请求,就会无法发送请求
	
	
	
	
	
能够保持会话的框架
	shiro,springsecurity
	
	
有哪些单点登录解决方案
	ouath，统一网关来维护登录，完成访问地址的鉴权，下发token,每次都是用令牌来实现鉴权，实际上和cookie一样
	cas，鉴权专用服务器
	


csrf和xss攻击

什么是xss跨站点脚本攻击？
	通过黑掉别人的服务器，在js代码中引入别人的访问地址。这样别人在访问自己页面的时候就会同时访问被攻击网站的请求。
	黑掉别人的服务器太难，利用漏洞。如果正常站点中出现富文本编辑器，就可以在里面嵌入访问别人链接的代码的imge标签。

什么是csrf?
	伪装请求，一个正规网站进行了登录，当其他页面嵌入了imge的地址，就可以访问到正规网站需要登录的请求链接
	
	
springsecurity能配置哪些
authorizeRqquest标签下可以配置登录要求

自定义登录页面




acl_sid: {
	id
	principal,//是用户 OR 角色
	sid//绑定用户的id OR 角色的id
}
acl_object_identity: {//授权控制表,与被授权主体一对一,与授权信息一对多
	id,
	object_id_class: {//关联对象的类信息
		acl_class: {
			id,//long
			class,//string
		}
	},
	object_id_identity,//关联对象的主键
	parent_object,//long
	owner_sid,//long
	entries_inheriting,//boolean
}
//具体的权限信息
acl_entry: {
	id,
	acl_object_identity,//long
	ace_order,//所属的权限顺序
	sid,//被授权的对象主体
	mask,//权限掩码
	granting,//是否授权
}









一acl----多ObjectIdentity

一acl----一AccessControlEntity，控制项,一个
一acl----一个Sid